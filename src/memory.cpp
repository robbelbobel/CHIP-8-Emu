#include <cstdint>
#include "memory.hpp"

Memory::Memory(){
    uint8_t symbols[16][5] = {              // Symbol Array
        {0xF0, 0x90, 0x90, 0x90, 0xF0},     // 0
        {0x20, 0x60, 0x20, 0x20, 0x70},     // 1
        {0xF0, 0x10, 0xF0, 0x80, 0xF0},     // 2
        {0xF0, 0x10, 0xF0, 0x10, 0xF0},     // 3
        {0x90, 0x90, 0xF0, 0x10, 0x10},     // 4
        {0xF0, 0x80, 0xF0, 0x10, 0xF0},     // 5
        {0xF0, 0x80, 0xF0, 0x90, 0xF0},     // 6
        {0xF0, 0x10, 0x20, 0x40, 0x40},     // 7
        {0xF0, 0x90, 0xF0, 0x90, 0xF0},     // 8
        {0xF0, 0x90, 0xF0, 0x10, 0xF0},     // 9
        {0xF0, 0x90, 0xF0, 0x90, 0x90},     // A
        {0xE0, 0x90, 0xE0, 0x90, 0xE0},     // B
        {0xF0, 0x80, 0x80, 0x80, 0xF0},     // C
        {0xE0, 0x90, 0x90, 0x90, 0xE0},     // D
        {0xF0, 0x80, 0xF0, 0x80, 0xF0},     // E
        {0xF0, 0x80, 0xF0, 0x80, 0x80}      // F
    };

    // Copy Symbols Array To Memory
    for(unsigned int i = 0; i <= 16; i++){
        for(unsigned int j = 0; j <= 5; j++){
            Memory::map[(i * 5) + j] = symbols[i][j];
        }
    }

    // // Dump Memory
    // std::ofstream dumpStream;
    // dumpStream.open("dump.bin", std::ios::binary | std::ios::out);
    // dumpStream.seekp(0, std::ios::beg);
    // dumpStream.write((char*) symbols, 16 * 5);
    // dumpStream.close();
}